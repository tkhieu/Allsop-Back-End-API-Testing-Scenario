// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.API.Catalog.Infrastructure;

namespace Service.API.Catalog.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20210317194731_AddSampleProductsToCatalogDb")]
    partial class AddSampleProductsToCatalogDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("App.Support.Common.Models.CatalogService.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "5beff28e-bba2-4b1b-9f06-126d6365d4cf",
                            Code = "MP",
                            Name = "Meat & Poultry"
                        },
                        new
                        {
                            Id = "fd6055d7-08a3-4351-8195-7da47e50f028",
                            Code = "FV",
                            Name = "Fruit & Vegetables"
                        },
                        new
                        {
                            Id = "737c9710-e069-436a-a236-660e8277dedf",
                            Code = "DR",
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = "bae52764-af07-4043-8586-52816594ee86",
                            Code = "CD",
                            Name = "Confectionary & Desserts"
                        },
                        new
                        {
                            Id = "3786f39a-a229-4689-aed7-d851082cd87a",
                            Code = "CI",
                            Name = "Baking/Cooking Ingredients"
                        },
                        new
                        {
                            Id = "b5901197-4899-4a22-ad39-7f1f4cdcb84b",
                            Code = "MI",
                            Name = "Miscellaneous Items"
                        });
                });

            modelBuilder.Entity("App.Support.Common.Models.CatalogService.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OldPriceValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Packaging")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceUnit")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "48d5553e-a450-4523-a143-73263766b62b",
                            CategoryId = "5beff28e-bba2-4b1b-9f06-126d6365d4cf",
                            InventoryQuantity = 12,
                            Name = "Chicken Fillets",
                            Packaging = "6 x 100g",
                            PriceUnit = "GBP",
                            PriceValue = 4.50m,
                            Sku = "MP-000001"
                        },
                        new
                        {
                            Id = "e547f80c-55ff-4541-81e7-d84f55cfdae2",
                            CategoryId = "5beff28e-bba2-4b1b-9f06-126d6365d4cf",
                            InventoryQuantity = 6,
                            Name = "Sirloin Steaks",
                            Packaging = "4 x 6-8oz",
                            PriceUnit = "GBP",
                            PriceValue = 45.70m,
                            Sku = "MP-000002"
                        },
                        new
                        {
                            Id = "34f98921-e46a-4937-872b-e2c57e705f3f",
                            CategoryId = "fd6055d7-08a3-4351-8195-7da47e50f028",
                            InventoryQuantity = 5,
                            Name = "Cauliflower Florets",
                            OldPriceValue = 6.75m,
                            Packaging = "10 x 500g",
                            PriceUnit = "GBP",
                            PriceValue = 5.00m,
                            Sku = "FV-000001"
                        },
                        new
                        {
                            Id = "77e63e97-b41a-4882-9574-52a3738fd93f",
                            CategoryId = "737c9710-e069-436a-a236-660e8277dedf",
                            InventoryQuantity = 6,
                            Name = "Coca-Cola",
                            OldPriceValue = 8.50m,
                            Packaging = "6 x 2L",
                            PriceUnit = "GBP",
                            PriceValue = 8.30m,
                            Sku = "DR-000001"
                        },
                        new
                        {
                            Id = "d2fb685f-86dd-47ac-bb23-8ffd8ce84941",
                            CategoryId = "737c9710-e069-436a-a236-660e8277dedf",
                            InventoryQuantity = 9,
                            Name = "Still Mineral Water",
                            Packaging = "6 x 24 x 500ml",
                            PriceUnit = "GBP",
                            PriceValue = 21.75m,
                            Sku = "DR-000002"
                        },
                        new
                        {
                            Id = "bf7b5f89-a569-4e3d-acb8-04a07e1e1130",
                            CategoryId = "737c9710-e069-436a-a236-660e8277dedf",
                            InventoryQuantity = 16,
                            Name = "Sparkling Mineral Water",
                            Packaging = "6 x 24 x 500ml",
                            PriceUnit = "GBP",
                            PriceValue = 25.83m,
                            Sku = "DR-000003"
                        });
                });

            modelBuilder.Entity("App.Support.Common.Models.CatalogService.Product", b =>
                {
                    b.HasOne("App.Support.Common.Models.CatalogService.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
